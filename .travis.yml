dist: xenial
language: minimal
os: linux
env:
  global:
    - CC=
    - SETARCH=
    - PODMAN=podman
matrix:
  include:
    # Intel, 64-bit, Little-endian
    - name: x86_64-fedora
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    # Intel, 32-bit, Little-endian
    - name: i686-fedora
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
        - CFLAGS="-m32"
        - SETARCH="setarch i686 --verbose --3gb"
        # For moby, "--privileged" or "--security-opt=seccomp:unconfined"
        # is necessary to run `setarch`.
        # It seems podman as well.
        # https://github.com/moby/moby/issues/20634
        - PODMAN_EXTRA_OPTS="--privileged"
        # glibc-devel.i686 is necessary to avoid following bulid error.
        # "/usr/include/gnu/stubs.h:7:11: fatal error: gnu/stubs-32.h: No such file or directory"
        - EXTRA_ARCH_32_PKGS="glibc-devel.i686"
    # ARM, 64-bit, Little-endian
    - name: aarch64-xenial-fedora
      arch: arm64
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    - name: aarch64-bionic-fedora
      arch: arm64
      dist: bionic
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    - name: aarch64-fedora-docker
      arch: arm64
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
        - PODMAN=docker
    # ARM, 32-bit, Little-endian
    - name: arm32-fedora-docker
      arch: arm64
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
        - PODMAN=docker
        - CC="arm-linux-gnu-gcc"
        - CFLAGS="-I/usr/arm-none-eabi/include"
        - SETARCH="setarch linux32 --verbose --32bit"
        # Use `--security-opt=seccomp:unconfined`,
        # as `--privileged` does not work on Travis arm64.
        # https://travis-ci.community/t/debugging-docker-run-issue-on-arm64/5491
        - PODMAN_EXTRA_OPTS="--security-opt=seccomp:unconfined"
        # arm-none-eabi-newlib: includes stdio.h in it.
        # It's to avoid an error "stdio.h: No such file or directory".
        # https://stackoverflow.com/questions/23011367
        - EXTRA_PKGS="gcc-arm-linux-gnu arm-none-eabi-newlib"
        - FORCE_ARCH_32=armv7hl
        - EXTRA_ARCH_32_PKGS="glibc-devel.armv7hl"
    # IBM, PowerPC, 64-bit, Little-endian
    - name: ppc64le-xenial-fedora
      arch: ppc64le
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    - name: ppc64le-bionic-fedora
      arch: ppc64le
      dist: bionic
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    - name: ppc64le-fedora-docker
      arch: ppc64le
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
        - PODMAN=docker
    # IBM, Z and LinuxONE, 64-bit, Big-endian
    - name: s390x-xenial-fedora
      arch: s390x
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    - name: s390x-bionic-fedora
      arch: s390x
      dist: bionic
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
    - name: s390x-fedora-docker
      arch: s390x
      env:
        - DIST=fedora
        - BASE_IMAGE="${DIST}:31"
        - PODMAN=docker
  allow_failures:
    # `podman info` does not work except x86_64.
    # https://github.com/containers/libpod/issues/4570
    - name: aarch64-xenial-fedora
    - name: aarch64-bionic-fedora
    - name: ppc64le-xenial-fedora
    - name: ppc64le-bionic-fedora
    - name: s390x-xenial-fedora
    - name: s390x-bionic-fedora
    # The fedora ppc64le RPM repository is unstable. It often fails to download RPMs.
    - name: ppc64le-fedora-docker
    # arm-linux-gnu-gcc does not work for user space.
    # It seems that it only works for kernels.
    # ```
    # /usr/bin/arm-linux-gnu-ld: cannot find crt1.o: No such file or directory
    # ...
    # ```
    # See <https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/4P4CNCDTJETSOLZNQJF6W5J76VZERKOJ/>.
    - name: arm32-fedora-docker
  fast_finish: true
install:
  # Install podman on Ubuntu.
  # https://github.com/containers/libpod/blob/master/install.md#ubuntu
  - sudo add-apt-repository -y ppa:projectatomic/ppa
  - sudo apt-get update -qq
  - sudo apt-get -qq -y install podman uidmap strace

  - apt list podman
  - apt-cache show podman
  - dpkg-query -L podman

  - uname -a
  # To emphasize printing the kernel release
  - uname -r
  - nproc
  - env
  - id

  - $PODMAN --version
  - $PODMAN version || true
  - $PODMAN info || true
  - strace -f $PODMAN info || true
  - $PODMAN info --debug || true

  # Incompatibilities of podman from docker on Travis CI
  # https://github.com/containers/libpod/issues/3679
  - mkdir -p /etc/containers
  - echo -e "[registries.search]\nregistries = ['docker.io']" | sudo tee /etc/containers/registries.conf

  - |
    travis_retry "${PODMAN}" build --rm \
      --build-arg BASE_IMAGE="${BASE_IMAGE}" \
      --build-arg EXTRA_PKGS="${EXTRA_PKGS}" \
      --build-arg FORCE_ARCH_32="${FORCE_ARCH_32}" \
      --build-arg EXTRA_ARCH_32_PKGS="${EXTRA_ARCH_32_PKGS}" \
      -f "Dockerfile-${DIST}" \
      -t my-container \
      .
script:
  - |
    "${PODMAN}" run ${PODMAN_EXTRA_OPTS} --rm -t \
      -e CC="${CC:-gcc}" \
      -e CFLAGS="${CFLAGS}" \
      -e SETARCH="${SETARCH}" \
      my-container bash -cx "setarch --list && $SETARCH uname -m && $SETARCH make test"
branches:
  only:
    - master
